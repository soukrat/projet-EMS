{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.renderChart = void 0;\nvar _utils = require(\"./utils\");\n\n//Renders the chart, should be called every time the window is resized\nvar renderChart = function renderChart(resize, prevProps, width, margin, height, outerRadius, g, doughnut, arcChart, needle, pieChart, svg, props, container, arcData) {\n  (0, _utils.updateDimensions)(props, container, margin, width, height); //Set dimensions of svg element and translations\n\n  svg.current.attr(\"width\", width.current + margin.current.left + margin.current.right).attr(\"height\", height.current + margin.current.top + margin.current.bottom);\n  g.current.attr(\"transform\", \"translate(\" + margin.current.left + \", \" + margin.current.top + \")\"); //Set the radius to lesser of width or height and remove the margins\n  //Calculate the new radius\n\n  (0, _utils.calculateRadius)(width, height, outerRadius, margin, g);\n  doughnut.current.attr(\"transform\", \"translate(\" + outerRadius.current + \", \" + outerRadius.current + \")\"); //Setup the arc\n\n  arcChart.current.outerRadius(outerRadius.current).innerRadius(outerRadius.current * (1 - props.arcWidth)).cornerRadius(props.cornerRadius).padAngle(props.arcPadding); //Remove the old stuff\n\n  doughnut.current.selectAll(\".arc\").remove();\n  g.current.selectAll(\".text-group\").remove(); //Draw the arc\n\n  var arcPaths = doughnut.current.selectAll(\".arc\").data(pieChart.current(arcData.current)).enter().append(\"g\").attr(\"class\", \"arc\");\n  arcPaths.append(\"path\").attr(\"d\", arcChart.current).style(\"fill\", function (d) {\n    return d.data.color;\n  });\n};\nexports.renderChart = renderChart;","map":{"version":3,"names":["Object","defineProperty","exports","value","renderChart","_utils","require","resize","prevProps","width","margin","height","outerRadius","g","doughnut","arcChart","needle","pieChart","svg","props","container","arcData","updateDimensions","current","attr","left","right","top","bottom","calculateRadius","innerRadius","arcWidth","cornerRadius","padAngle","arcPadding","selectAll","remove","arcPaths","data","enter","append","style","d","color"],"sources":["/home/project/node_modules/react-gauge-chart/dist/GaugeChart/renderChart.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.renderChart = void 0;\n\nvar _utils = require(\"./utils\");\n\n//Renders the chart, should be called every time the window is resized\nvar renderChart = function renderChart(resize, prevProps, width, margin, height, outerRadius, g, doughnut, arcChart, needle, pieChart, svg, props, container, arcData) {\n  (0, _utils.updateDimensions)(props, container, margin, width, height); //Set dimensions of svg element and translations\n\n  svg.current.attr(\"width\", width.current + margin.current.left + margin.current.right).attr(\"height\", height.current + margin.current.top + margin.current.bottom);\n  g.current.attr(\"transform\", \"translate(\" + margin.current.left + \", \" + margin.current.top + \")\"); //Set the radius to lesser of width or height and remove the margins\n  //Calculate the new radius\n\n  (0, _utils.calculateRadius)(width, height, outerRadius, margin, g);\n  doughnut.current.attr(\"transform\", \"translate(\" + outerRadius.current + \", \" + outerRadius.current + \")\"); //Setup the arc\n\n  arcChart.current.outerRadius(outerRadius.current).innerRadius(outerRadius.current * (1 - props.arcWidth)).cornerRadius(props.cornerRadius).padAngle(props.arcPadding); //Remove the old stuff\n\n  doughnut.current.selectAll(\".arc\").remove();\n  g.current.selectAll(\".text-group\").remove(); //Draw the arc\n\n  var arcPaths = doughnut.current.selectAll(\".arc\").data(pieChart.current(arcData.current)).enter().append(\"g\").attr(\"class\", \"arc\");\n  arcPaths.append(\"path\").attr(\"d\", arcChart.current).style(\"fill\", function (d) {\n    return d.data.color;\n  });\n};\n\nexports.renderChart = renderChart;"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,WAAW,GAAG,KAAK,CAAC;AAE5B,IAAIC,MAAM,GAAGC,OAAO,CAAC,SAAS,CAAC;;AAE/B;AACA,IAAIF,WAAW,GAAG,SAASA,WAAWA,CAACG,MAAM,EAAEC,SAAS,EAAEC,KAAK,EAAEC,MAAM,EAAEC,MAAM,EAAEC,WAAW,EAAEC,CAAC,EAAEC,QAAQ,EAAEC,QAAQ,EAAEC,MAAM,EAAEC,QAAQ,EAAEC,GAAG,EAAEC,KAAK,EAAEC,SAAS,EAAEC,OAAO,EAAE;EACrK,CAAC,CAAC,EAAEhB,MAAM,CAACiB,gBAAgB,EAAEH,KAAK,EAAEC,SAAS,EAAEV,MAAM,EAAED,KAAK,EAAEE,MAAM,CAAC,CAAC,CAAC;;EAEvEO,GAAG,CAACK,OAAO,CAACC,IAAI,CAAC,OAAO,EAAEf,KAAK,CAACc,OAAO,GAAGb,MAAM,CAACa,OAAO,CAACE,IAAI,GAAGf,MAAM,CAACa,OAAO,CAACG,KAAK,CAAC,CAACF,IAAI,CAAC,QAAQ,EAAEb,MAAM,CAACY,OAAO,GAAGb,MAAM,CAACa,OAAO,CAACI,GAAG,GAAGjB,MAAM,CAACa,OAAO,CAACK,MAAM,CAAC;EACjKf,CAAC,CAACU,OAAO,CAACC,IAAI,CAAC,WAAW,EAAE,YAAY,GAAGd,MAAM,CAACa,OAAO,CAACE,IAAI,GAAG,IAAI,GAAGf,MAAM,CAACa,OAAO,CAACI,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC;EACnG;;EAEA,CAAC,CAAC,EAAEtB,MAAM,CAACwB,eAAe,EAAEpB,KAAK,EAAEE,MAAM,EAAEC,WAAW,EAAEF,MAAM,EAAEG,CAAC,CAAC;EAClEC,QAAQ,CAACS,OAAO,CAACC,IAAI,CAAC,WAAW,EAAE,YAAY,GAAGZ,WAAW,CAACW,OAAO,GAAG,IAAI,GAAGX,WAAW,CAACW,OAAO,GAAG,GAAG,CAAC,CAAC,CAAC;;EAE3GR,QAAQ,CAACQ,OAAO,CAACX,WAAW,CAACA,WAAW,CAACW,OAAO,CAAC,CAACO,WAAW,CAAClB,WAAW,CAACW,OAAO,IAAI,CAAC,GAAGJ,KAAK,CAACY,QAAQ,CAAC,CAAC,CAACC,YAAY,CAACb,KAAK,CAACa,YAAY,CAAC,CAACC,QAAQ,CAACd,KAAK,CAACe,UAAU,CAAC,CAAC,CAAC;;EAEvKpB,QAAQ,CAACS,OAAO,CAACY,SAAS,CAAC,MAAM,CAAC,CAACC,MAAM,CAAC,CAAC;EAC3CvB,CAAC,CAACU,OAAO,CAACY,SAAS,CAAC,aAAa,CAAC,CAACC,MAAM,CAAC,CAAC,CAAC,CAAC;;EAE7C,IAAIC,QAAQ,GAAGvB,QAAQ,CAACS,OAAO,CAACY,SAAS,CAAC,MAAM,CAAC,CAACG,IAAI,CAACrB,QAAQ,CAACM,OAAO,CAACF,OAAO,CAACE,OAAO,CAAC,CAAC,CAACgB,KAAK,CAAC,CAAC,CAACC,MAAM,CAAC,GAAG,CAAC,CAAChB,IAAI,CAAC,OAAO,EAAE,KAAK,CAAC;EAClIa,QAAQ,CAACG,MAAM,CAAC,MAAM,CAAC,CAAChB,IAAI,CAAC,GAAG,EAAET,QAAQ,CAACQ,OAAO,CAAC,CAACkB,KAAK,CAAC,MAAM,EAAE,UAAUC,CAAC,EAAE;IAC7E,OAAOA,CAAC,CAACJ,IAAI,CAACK,KAAK;EACrB,CAAC,CAAC;AACJ,CAAC;AAEDzC,OAAO,CAACE,WAAW,GAAGA,WAAW","ignoreList":[]},"metadata":{},"sourceType":"script"}